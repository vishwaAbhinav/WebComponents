{
  "name": "grunt-vulcanize",
  "version": "0.6.4",
  "description": "Grunt plugin for Polymer's Vulcanize",
  "main": "Gruntfile.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "vulcanize": "0.7.9"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-jshint": "^0.11.0",
    "grunt-contrib-nodeunit": "^0.4.1",
    "grunt-mkdir": "~0.1.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Polymer/grunt-vulcanize.git"
  },
  "keywords": [
    "grunt",
    "gruntplugin",
    "polymer",
    "vulcanize"
  ],
  "author": {
    "name": "The Polymer Authors"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/Polymer/grunt-vulcanize/issues"
  },
  "homepage": "https://github.com/Polymer/grunt-vulcanize",
  "contributors": [
    {
      "name": "Google Inc.",
      "email": "*@google.com"
    }
  ],
  "readme": "# grunt-vulcanize\n\n> Grunt task for Polymer's Vulcanize\n\n## Getting Started\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-vulcanize --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-vulcanize');\n```\n\n## The \"vulcanize\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `vulcanize` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  vulcanize: {\n    default: {\n      options: {\n        // Task-specific options go here.\n      },\n      files: {\n        // Target-specific file lists and/or options go here.\n      },\n    },\n  },\n})\n```\n\n### Options\n\n#### options.csp\nType: `Boolean`\nDefault value: `false`\n\nExtract inline `<script>` blocks into a separate file. Maps directly to https://github.com/Polymer/vulcanize#content-security-policy\n\n#### options.inline\nType: `Boolean`\nDefault value: `false`\n\nThe opposite of `csp` mode: inline all scripts and stylesheets.\n\n#### options.strip\nType: `Boolean`\nDefault value: `false`\n\nStrip comments and empty text nodes from output.\n\n#### options.excludes.imports\nType: `Array[String]`\nDefault value: `[]`\n\nAn array of strings that will be used as `RegExp`s to filter matching imports from vulcanization.\nThis option should be used if multiple vulcanizations would share imports, as they could no longer be deduplicated in\ntheir vulcanized forms.\n\n#### options.excludes.scripts\nType: `Array[String]`\nDefault value: `[]`\n\nAn array of strings that will be used as `RegExp`s to filter matching scripts from vulcanization.\nThis option should be used if multiple vulcanizations would share scripts, as they could no longer be deduplicated in\ntheir vulcanized forms.\n\n#### options.excludes.styles\nType: `Array[String]`\nDefault value: `[]`\n\nAn array of strings that will be used as `RegExp`s to filter matching stylesheets from vulcanization.\nThis option should be used if multiple vulcanizations would share stylesheets, as they could no longer be deduplicated in their vulcanized forms.\n\n#### options.abspath\nType: `String`\nDefault value: `''`\n\nSpecify a \"site root\". Resolve paths to absolute paths based on the site root.\n\n#### options['strip-excludes']\nType: `Boolean`\nDefault value: `true`\n\nBy default, HTML Imports excluded from inlining are removed.\nSet this flag to keep the excluded imports in the output file.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to vulcanize `index.html` into `build.html`.\n\nPlease see https://github.com/Polymer/vulcanize#example for more information.\n\n```js\ngrunt.initConfig({\n  vulcanize: {\n    default: {\n      options: {},\n      files: {\n        'build.html': 'index.html'\n      },\n    },\n  },\n})\n```\n\n#### Custom Options\nIn this example, custom options are used to apply [Content Security Policy](http://en.wikipedia.org/wiki/Content_Security_Policy) settings on the vulcanization of `index.html` into `build-csp.html`.\n\nPlease see https://github.com/Polymer/vulcanize#content-security-policy for more information\n\n```js\ngrunt.initConfig({\n  vulcanize: {\n    default: {\n      options: {\n        csp: true,\n        excludes: {\n          imports: [\n            \"polymer.html\"\n          ]\n        }\n      },\n      files: {\n        'build-csp.html': 'index.html'\n      },\n    },\n  },\n})\n```\n\n## Contributing\nContributions to this project must follow the guidlines of the [Contributor License Agreement](https://github.com/Polymer/polymer/blob/master/CONTRIBUTING.md)\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-vulcanize@0.6.4",
  "dist": {
    "shasum": "c7a275a69ce96983cc12083e3e4589a0ba23b5a3"
  },
  "_from": "grunt-vulcanize@",
  "_resolved": "https://registry.npmjs.org/grunt-vulcanize/-/grunt-vulcanize-0.6.4.tgz"
}
